name: LMS CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: cd demo && mvn -B package --file pom.xml
    
    - name: Run Backend Tests
      run: cd demo && mvn test
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
  
  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: cd frontend && npm ci
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    - name: Run frontend tests
      run: cd frontend && npm test -- --passWithNoTests
  
  code-quality:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=Yashini-Hettiarachchi_LMS2
          -Dsonar.organization=yashini-hettiarachchi
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend, code-quality]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build with Maven
      run: cd demo && mvn -B package --file pom.xml -DskipTests
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies and build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Deploy to production
      run: |
        echo "Deploying to production server..."
        # This would be replaced with actual deployment commands
        # For example, using SSH to deploy to a server or deploying to a cloud service
        echo "Deployment completed successfully!"
